---
- name: check that variables are defined
  assert:
    that:
      - organization is defined
      - slapd_domain is defined
      - slapd_basedn is defined
      - slapd_basedn_admin is defined
      - ldap_data_tree_password is defined
      - config_admin_password is defined
      - ldap_certificate_file is defined
      - ldap_certificate_key_file is defined
      - ldap_ca_certificate_file is defined
      - perun_folder is defined

- name: Configure domain for LDAP
  debconf:
    name: 'slapd'
    question: '{{ item.question }}'
    value: '{{ item.value }}'
    vtype: '{{ item.vtype }}'
  with_items:
    - question: "slapd/domain"
      value: "{{ slapd_domain }}"
      vtype: "string"
    - question: "shared/organization"
      value: "{{ organization }}"
      vtype: "string"
    - question: "slapd/backend"
      value: "MDB"
      vtype: "string"

- name: install LDAP
  package:
    name:
      - slapd
      - ldap-utils
      - python-ldap
      - libnet-ldap-perl
    state: present

- name: Generate the root password for ldap
  shell: slappasswd -s {{ ldap_data_tree_password }}
  register: root_password_hash

- name: Generate the password for config admin
  shell: slappasswd -s {{ config_admin_password }}
  register: config_admin_password_hash

- name: Setup Admin to manage config
  ldap_attr:
    dn: "olcDatabase={0}config,cn=config"
    name: "{{ item.key }}"
    values: "{{ item.value }}"
    state: exact
  with_dict:
    olcRootPW: "{{ config_admin_password_hash.stdout }}"

- name: Set up admin to manage data tree
  ldap_attr:
    dn: olcDatabase={1}mdb,cn=config
    name: "{{ item.key }}"
    values: "{{ item.value }}"
    state: exact
  with_dict:
    olcSuffix: "{{ slapd_basedn }}"
    olcRootDN: "{{ slapd_basedn_admin }}"
    olcRootPW: "{{ root_password_hash.stdout }}"

- name: Add openldap user to ssl-cert group
  user:
    name: openldap
    groups: ssl-cert
    append: yes

- name: Create file for modifying LDAP TLS settings
  copy:
    dest: "/etc/ldap/ssl.ldif"
    content: |
      dn: cn=config
      changetype: modify
      replace: olcTLSCertificateFile
      olcTLSCertificateFile: {{ ldap_certificate_file }}
      -
      replace: olcTLSCertificateKeyFile
      olcTLSCertificateKeyFile: {{ ldap_certificate_key_file }}
      -
      replace: olcTLSCACertificateFile
      olcTLSCACertificateFile: {{ ldap_ca_certificate_file }}
      -

- name: Change TLS settings
  command: /usr/bin/ldapmodify -Q -H ldapi:/// -Y EXTERNAL -f /etc/ldap/ssl.ldif


- name: Enable secure port in /etc/default/slapd
  lineinfile:
    dest: /etc/default/slapd
    regexp: ^SLAPD_SERVICES=
    line: SLAPD_SERVICES="ldaps:/// ldapi:/// ldap://127.0.0.1/"

- name: Create file for modifying LDAP access rights
  copy:
    dest: "/etc/ldap/access.ldif"
    content: |
      dn: olcDatabase={1}mdb,cn=config
      changetype: modify
      replace: olcAccess
      olcAccess: {0}to attrs=userPassword by self write by anonymous auth by * none
      olcAccess: {1}to attrs=shadowLastChange by self write by * read
      olcAccess: {2}to * by self read by * break
      olcAccess: {3}to * by users search by * break
      -

- name: Change LDAP access rights
  command: /usr/bin/ldapmodify -Q -H ldapi:/// -Y EXTERNAL -f /etc/ldap/access.ldif

- name: Create perun schema entries
  ldap_entry:
    dn: "{{ item.dn }}"
    objectClass: "{{ item.objectClass }}"
  with_items:
    - dn: cn={4}perun,cn=schema,cn=config
      objectClass: olcSchemaConfig
    - dn: cn={5}inetUser,cn=schema,cn=config
      objectClass: olcSchemaConfig
    - dn: cn={6}tenOperEntry,cn=schema,cn=config
      objectClass: olcSchemaConfig

- name: Set up perun/inetUser/tenOperEntry schema attributes
  command: "/usr/bin/ldapmodify -Q -H ldapi:/// -Y EXTERNAL -f  {{ perun_folder }}/perun-utils/ldapc-scripts/schemas/{{ item }}.ldif"
  with_items:
    - perun-schema
    - inetUser-schema
    - tenOperEntry-schema

- name: Set olcAttributeOptions attribute
  ldap_attr:
    dn: cn=config
    name: "olcAttributeOptions"
    values: "x-ns-"
    state: exact

- name: Set indexes (olcDbIndex attribute)
  ldap_attr:
    dn: olcDatabase={1}mdb,cn=config
    name: olcDbIndex
    values: "{{ item }}"
    state: present
  with_items:
    - cn,uid eq
    - uidNumber,gidNumber eq
    - member,memberUid eq
    - perunVoId eq
    - eduPersonPrincipalNames eq
    - entryCSN,entryUUID eq
    - login eq
    - memberOfPerunVo eq
    - userCertificateSubject eq
    - entityID eq
    - assignedToResourceId eq

- name: Change o attribute to perun in root dn
  ldap_attr:
    dn: "{{ slapd_basedn }}"
    name: o
    values: perun
    state: exact
    bind_dn: "{{ slapd_basedn_admin }}"
    bind_pw: "{{ ldap_data_tree_password }}"
