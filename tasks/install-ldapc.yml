---
# Task file for installation of LDAPc in Debian distribution
- name: Check variables
  assert:
    that:
      - perun_login is defined
      - perun_group is defined
      - config_file_owner is defined
      - perun_ldapc_folder is defined
      - perun_folder is defined
      - ldapc_utils is defined
      - script_files is defined
      - perun_ldapc_properties_template is defined
      - perun_ldapc_properties_file is defined
      - logback_ldapc_xml_template is defined
      - logback_ldapc_xml_file is defined
      - perun_rpc_lib_properties_template is defined
      - perun_rpc_lib_properties_file is defined

- name: Make "{{ perun_config_dir }}" directory
  file:
    path: "{{ perun_config_dir }}"
    state: directory
    mode: 0755
    owner: "{{ config_files_owner }}"
    group: "{{ perun_group }}"

- name: Create file "{{ perun_ldapc_properties_file }}"
  template:
    src: "{{ perun_ldapc_properties_template }}"
    dest: "{{ perun_ldapc_properties_file }}"
    owner: "{{ config_files_owner }}"
    group: "{{ perun_group }}"
    mode: 0640
    force: no

- name: Create file "{{ logback_ldapc_xml_file }}"
  template:
    src: "{{ logback_ldapc_xml_template }}"
    dest: "{{ logback_ldapc_xml_file }}"
    owner: "{{ config_files_owner }}"
    group: "{{ perun_group }}"
    mode: 0640
    force: no

- name: Create file "{{ perun_rpc_lib_properties_file }}"
  template:
    src: "{{ perun_rpc_lib_properties_template }}"
    dest: "{{ perun_rpc_lib_properties_file }}"
    owner: "{{ config_files_owner }}"
    group: "{{ perun_group }}"
    mode: 0640
    force: no

- name: Create perun-ldapc folder in perun's home repository
  file:
    path: "{{ perun_ldapc_folder }}"
    state: directory
    owner: "{{ perun_login }}"
    group: "{{ perun_group }}"
    mode: 0755

- name: Copy scripts for ldapc
  copy:
    src: "{{ item.value.source }}"
    dest: "{{ item.value.destination }}"
    owner: "{{ perun_login }}"
    group: "{{ perun_group }}"
    mode: "{{ item.value.mode }}"
    remote_src: yes
  with_dict: "{{ script_files }}"

- name: Copy init.d script for perun-ldapc
  copy:
    src: "{{ perun_folder }}/perun-utils/init.d-scripts/perun-ldapc.debian"
    dest: "/etc/init.d/perun-ldapc"
    owner: root
    group: root
    mode: "0755"
    remote_src: yes


- name: Create truststore in perun-ldapc folder if you use snake-oil certificate
  java_cert:
    cert_path: "{{ apache_certificate_file }}"
    cert_alias: default
    keystore_path: "{{ perun_ldapc_folder }}/truststore"
    keystore_pass: "{{ password_ldap_snakeoil_truststore }}"
    keystore_create: yes
    state: present
  when: apache_certificate_file == "/etc/perun/ssl/ssl-cert-snakeoil.pem"

- name: Change JAVA_OPTIONS in initialize script to use truststore with snake-oil certificate
  lineinfile:
    path: "{{ script_files.initialize.destination }}"
    regexp: '^JAVA_OPTIONS='
    line: 'JAVA_OPTIONS=" -Dspring.profiles.default=production -Djavax.net.ssl.trustStore={{ perun_ldapc_folder }}/truststore -Djavax.net.ssl.trustStorePassword={{ password_ldap_snakeoil_truststore }} -Djavax.net.ssl.trustStoreType=JKS"'
  when: apache_certificate_file == "/etc/perun/ssl/ssl-cert-snakeoil.pem"

- name: Change JAVA_OPTIONS in init.d script to use truststore with snake-oil certificate
  copy:
    dest: /etc/perun/perun-ldapc
    content: 'JAVA_OPTS=" -Djavax.net.ssl.trustStore={{ perun_ldapc_folder }}/truststore -Djavax.net.ssl.trustStorePassword={{ password_ldap_snakeoil_truststore }} -Djavax.net.ssl.trustStoreType=JKS"'
  when: apache_certificate_file == "/etc/perun/ssl/ssl-cert-snakeoil.pem"

- name: Run initialize script
  ignore_errors: True
  command: "{{ script_files.initialize.destination }}"
  become: yes
  become_user: "{{ perun_login }}"

- name: Start LDAPc and enable it to start after reboot
  service:
    name: perun-ldapc
    state: started
    enabled: yes
